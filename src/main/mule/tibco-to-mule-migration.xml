<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="c8affae6-4cd7-4cd1-995d-ac89eba920f9" >
		<http:listener-connection host="localhost" port="8083" />
	</http:listener-config>
	<file:config name="File_Config" doc:name="File Config" doc:id="36fe23df-9046-4f5c-a2d6-0d61c25ff6ef" >
		<file:connection workingDir="${mule.home}/apps/${app.name}/" />
	</file:config>
	<flow name="tibco-to-mule-migrationFlow" doc:id="52633385-4840-4005-a216-56f24bf96959" >
		<http:listener doc:name="Listener" doc:id="0a2f2e84-72b7-47a8-9f5f-bdb4565e22d7" config-ref="HTTP_Listener_config" path="/migration"/>
		<ee:transform doc:name="set-logging-variables" doc:id="e7e7231b-b95f-4ca7-b7d4-430bb0fa2233" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="logVars" ><![CDATA[%dw 2.0
output application/java
---
{
	flowName:"tibco-to-mule-migrationFlow"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="async-logging-start-subflow" doc:id="ebc5fa06-dc6c-4390-9535-eaa9456a3e04" name="async-logging-start-subflow"/>
		<flow-ref doc:name="global-tibco-element-convert-subflow" doc:id="9525470b-fc1f-4d44-8ab6-fd88443282ce" name="global-tibco-element-properties-subflow" target="properties" targetValue="#[payload]"/>
		<flow-ref doc:name="global-tibco-element-convert-subflow" doc:id="90ba18eb-8369-468d-8d82-4029b705b915" name="global-tibco-element-convert-subflow" target="configs" targetValue="#[payload]"/>
		<flow-ref doc:name="global-tibco-flow-convert-subFlow" doc:id="530cf25a-d8c8-412f-8483-fd0f7515f0d7" name="global-tibco-flow-convert-subFlow"/>
		<flow-ref doc:name="async-logging-end-subflow" doc:id="dce44b65-8186-4e00-bfa0-4ec794761d17" name="async-logging-end-subflow"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9f347435-713f-4def-bced-ab72f4c51e20" >
				<flow-ref doc:name="error-logging-subflow" doc:id="7dddf3ce-e177-4e1b-9510-d289ffc5d9d7" name="error-logging-subflow"/>
			</on-error-continue>
		</error-handler>
	</flow>
	
	<sub-flow name="global-tibco-element-properties-subflow" doc:id="d262cf15-9e71-456c-ac3d-358bb9da4dde">
		<file:read doc:name="Read" doc:id="3f86b24e-a622-4e73-9596-675d3d5ee762" config-ref="File_Config" path="inputFiles/Properties/default.substvar"/>
		<ee:transform doc:name="Transform Message" doc:id="29cd7969-3a5b-4ea6-ace7-1ea91a8c620b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="b66612f2-b331-48e2-96ae-645d4f36795a">
			<ee:message>
			</ee:message>
				<ee:variables>
					<ee:set-variable variableName="testProp"><![CDATA[%dw 2.0
output application/xml
---
"mule" @("xmlns:ee": "http://www.mulesoft.org/schema/mule/ee/core", "xmlns:http": "http://www.mulesoft.org/schema/mule/http", 
		"xmlns": "http://www.mulesoft.org/schema/mule/core", "xmlns:doc": "http://www.mulesoft.org/schema/mule/documentation",
		"xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
		"xsi:schemaLocation": "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd " ++ 
		"http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd " ++
		"http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"): {
	((payload.repository.globalVariables.*globalVariable default []) map(record,count) -> {		
		"global-property" @("doc:name": "Global Property", "doc:id": uuid(), "name": record.name, "value": (record.value default "NIL")): ""
	})
} ]]></ee:set-variable>
				</ee:variables>
		
</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="203bbb97-b57d-4025-bc0b-ff5b2a9538da" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
vars.testProp]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	
</sub-flow>
	<sub-flow name="global-tibco-element-convert-subflow" doc:id="c3f1f2e0-d691-471d-b5f1-b3c441b6aca3" >
		<file:list doc:name="List" doc:id="d1e6ff47-cc64-4c81-b776-2b81279fb88b" directoryPath="${mule.home}/apps/${app.name}/inputFiles/Config"/>
		<foreach doc:name="For Each" doc:id="9e5afa76-835f-4a7b-9289-9ffdd78a95e3" >
			<ee:transform doc:name="Setting mimeType" doc:id="10ca9b41-ce9f-4b24-b3de-d90c73e6323c" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="dac31860-9143-4b82-bb2a-bb0103afd62f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun getIndex(obj,value) = (obj.*substitutionBindings map if($.@template == value) $$ else "") filter ($ != "")
---
(using (temp = payload.namedResource.'configuration') (
	if (temp.@'type' == "httpconnector:HttpConnectorConfiguration" ) ({
		"type": "httpListener",
		"name": payload.namedResource.@name,
		"host":	if (temp.host != null) temp.host
				else if (getIndex(temp,"host") != []) (("\$/{" ++ temp.*substitutionBindings[(getIndex(temp,"host"))[0]].@propName ++ "}") replace "/" with "")
				else "localhost",
		"port": if (temp.port != null) temp.port
				else if (getIndex(temp,"port") != []) (("\$/{" ++ temp.*substitutionBindings[(getIndex(temp,"port"))[0]].@propName ++ "}") replace "/" with "")
				else "8888"
	})
	else ({})
))
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="a35fa8cf-68cf-4046-9454-781a8137ee11" >
				<ee:variables >
					<ee:set-variable variableName="configObject" ><![CDATA[%dw 2.0
output application/json
---
flatten([
	vars.configObject default {},
	payload
])]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="1810198a-6d05-4198-823f-5654f345920b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.configObject filter ($ != {})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="986f47d6-ee54-463c-aa04-d21d00531deb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
"mule" @("xmlns:ee": "http://www.mulesoft.org/schema/mule/ee/core", "xmlns:http": "http://www.mulesoft.org/schema/mule/http", 
		"xmlns": "http://www.mulesoft.org/schema/mule/core", "xmlns:doc": "http://www.mulesoft.org/schema/mule/documentation",
		"xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
		"xsi:schemaLocation": "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd " ++ 
		"http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd " ++
		"http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"): {
	(payload map(record,count) -> {
		(if(record.'type' == "httpListener") (
			"http:listener-config" @("name":record.name, "doc:name": "HTTP Listener Config", "doc:id": uuid()): {
				"http:listener-connection" @("host": record.host, "port": record.port): ""	
			}
		)
		else ({}))
	})
} ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	
	<sub-flow name="global-tibco-flow-convert-subFlow" doc:id="8ca15972-3e98-4be9-a2a8-bcd36d943bc2" >
		<file:read doc:name="Read" doc:id="48704050-c31a-4159-aed6-5eebfef6c06e" config-ref="File_Config" path="inputFiles/Flow/Process.bwp"/>
		<ee:transform doc:name="Transform Message" doc:id="2e63decc-de69-484b-9d0e-63a83074bdae" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="b9ee5f98-8068-44c3-b96c-1950c301a6a8">
			<ee:message>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="nameSpaceConstant" ><![CDATA[%dw 2.0
output application/java
---
value: 'xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
<flow doc:id="030ceaf6-c970-4775-b053-072e3a2c5d9b" name="tibco-to-mule-migration">']]></ee:set-variable>
				<ee:set-variable variableName="httpConfigString" ><![CDATA[%dw 2.0
output application/java
---
value: '<doc:name="Listener" doc:id="b1a1571b-fe31-497c-9fce-a68e74b5edca" config-ref="HTTP_Listener_config" host= ":host" port= ":port" path= ":path">']]></ee:set-variable>
				<ee:set-variable variableName="initialPayload" ><![CDATA[%dw 2.0
output application/xml
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="tibcoComponentList" ><![CDATA[%dw 2.0
output application/java
---
payload.'process'.'scope'.'flow'.*'extensionActivity' map ((payload01,payload01index) ->(
	if(payload01..'BWActivity'.@activityTypeID[0] == "bw.http.HTTPReceiver")(
    	(payload01.receiveEvent.@'name'): {
    		"config-ref": payload.'process'.'variables'.*variable[?($.@name == payload01.receiveEvent.eventSource.BWActivity.activityConfig.properties.value.@httpConnection)][0].'from'.literal,
    		"path": payload01.receiveEvent.eventSource.BWActivity.activityConfig.properties.value.@endpointUri
        } 
)
	else if(payload01..'BWActivity'.@activityTypeID[0] == "bw.generalactivities.log")(
		(payload01.activityExtension.@'name'): {
			"level": payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@role
		   }
	)
	else if(payload01..'BWActivity'.@activityTypeID[0] == "bw.file.write")(
		(payload01.activityExtension.@'name'): {
			"fileName": payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@fileName,
			"append": if(payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@append == "true")"APPEND" else "OVERWRITE"
			
		   }
	)
	else if(payload01..'BWActivity'.@activityTypeID[0] == "bw.jdbc.JDBCQuery")(
		(payload01.activityExtension.@'name'): {
			"config-ref": payload.'process'.'variables'.*variable[?($.@name == payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@sharedResourceProperty)][0].'from'.literal,
			"maxRows": payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@maxRows,
			"sqlStatement": payload01.activityExtension.config.BWActivity.activityConfig.properties.value.@sqlStatement
			
		   }
	)
	else if(payload01..'BWActivity'.@activityTypeID[0] == "bw.jms.receive")(
		(payload01.receiveEvent.@'name'): {
			"config-ref": payload.'process'.'variables'.*variable[?($.@name == payload01.receiveEvent.eventSource.BWActivity.activityConfig.properties.value.@connectionReference)][0].'from'.literal,
			"destination": payload01.receiveEvent.eventSource.BWActivity.activityConfig.properties.value.@destinationName
		   }
	)
		else ""
))
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="855239e2-11c0-41d4-b1c3-6b63e2b70311">
			<ee:message>
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
mule @('xmlns': "http://www.mulesoft.org/schema/mule/core",
	'xmlns:doc': "http://www.mulesoft.org/schema/mule/documentation",
	'xmlns:xsi' :"http://www.w3.org/2001/XMLSchema-instance",
	'xsi:schemaLocation' : "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd"):{
    (vars.properties.mule),
    (vars.configs.mule),	    
    (flow @(name: "tibco-to-mule-migration-flow", 'doc:id': "c2f9df18-fe5d-415b-9142-f9274d00127d"): (
		payload.'process'.'scope'.'flow'.*'extensionActivity' map (
			if($..'BWActivity'.@activityTypeID[0] == "bw.http.HTTPReceiver")(
				'http:listener' @('doc:name':"Listener" ,'doc:id': "006d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref':  vars.tibcoComponentList[$.receiveEvent.@'name'][0].'config-ref' ,'path': vars.tibcoComponentList[$.receiveEvent.@'name'][0].'path'):{}
			)
			else if($..'BWActivity'.@activityTypeID[0] == "bw.generalactivities.log")(
				'logger' @('doc:name':"Logger" ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'level': upper(vars.tibcoComponentList[$.activityExtension.@'name'][0].level default "INFO"),'message': "test"):{}
			)
			else if($..'BWActivity'.@activityTypeID[0] == "bw.file.write")(
				'file:write' @('doc:name':"Write" ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'path':  vars.tibcoComponentList[$.activityExtension.@'name'][0].fileName, "mode": vars.tibcoComponentList[$.activityExtension.@'name'][0].append):{}
			)
			else if($..'BWActivity'.@activityTypeID[0] == "bw.jdbc.JDBCQuery")(
				'db:select' @('doc:name':"Select" ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref':  vars.tibcoComponentList[$.activityExtension.@'name'][0].'config-ref', "maxRows": vars.tibcoComponentList[$.activityExtension.@'name'][0].maxRows ):{
					'db:sql' : vars.tibcoComponentList[$.activityExtension.@'name'][0].sqlStatement
				}
			)
			else if($..'BWActivity'.@activityTypeID[0] == "bw.jms.receive")(
				'jms:listener' @('doc:name':"Listener" ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref':  vars.tibcoComponentList[$.receiveEvent.@'name'][0].'config-ref', "destination": vars.tibcoComponentList[$.receiveEvent.@'name'][0].destination):{}
			)
			else {}
		) reduce ($$ ++ $)
	))
}


]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="nameSpaceConstant" ><![CDATA[%dw 2.0
output application/java
---
value: 'xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
<flow doc:id="bff73d81-a042-4986-b790-d6a2854fa397" name="tibco-to-mule-migration">']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<file:write doc:name="Write" doc:id="d6f6ee3c-cb3b-4fee-b55f-c373262eca53" path="outputFiles/output.xml" config-ref="File_Config">
		</file:write>
		<set-variable value="${mule.home}/apps/${app.name}/outputFiles/output.xml" doc:name="set-outPutFileDirectory" doc:id="9b6ee04f-e7bd-4972-a762-333b23045d9a" variableName="outPutFileDirectory"/>
		<logger level="INFO" doc:name="Logger" doc:id="da183cdc-6c1e-4c54-926d-1cb37300e61a" message="Please check output file #[vars.outPutFileDirectory]"/>	
	
</sub-flow>
	
</mule>
