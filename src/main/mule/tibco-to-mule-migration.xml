<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="c8affae6-4cd7-4cd1-995d-ac89eba920f9" >
		<http:listener-connection host="localhost" port="8083" />
	</http:listener-config>
	<file:config name="File_Config" doc:name="File Config" doc:id="36fe23df-9046-4f5c-a2d6-0d61c25ff6ef" >
		<file:connection workingDir="${mule.home}/apps/${app.name}/" />
	</file:config>
	<flow name="tibco-to-mule-migrationFlow" doc:id="52633385-4840-4005-a216-56f24bf96959" >
		<http:listener doc:name="Listener" doc:id="0a2f2e84-72b7-47a8-9f5f-bdb4565e22d7" config-ref="HTTP_Listener_config" path="/migration"/>
		<ee:transform doc:name="set-logging-variables" doc:id="e7e7231b-b95f-4ca7-b7d4-430bb0fa2233" >
			<ee:variables >
				<ee:set-variable variableName="logVars" ><![CDATA[%dw 2.0
output application/java
---
{
	flowName:"tibco-to-mule-migrationFlow"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="async-logging-start-subflow" doc:id="ebc5fa06-dc6c-4390-9535-eaa9456a3e04" name="async-logging-start-subflow"/>
		<flow-ref doc:name="global-tibco-element-properties-subflow" doc:id="9525470b-fc1f-4d44-8ab6-fd88443282ce" name="global-tibco-element-properties-subflow" target="properties" targetValue="#[payload]"/>
		<flow-ref doc:name="global-tibco-element-convert-subflow" doc:id="90ba18eb-8369-468d-8d82-4029b705b915" name="global-tibco-element-convert-subflow" target="configs" targetValue="#[payload]"/>
		<flow-ref doc:name="global-tibco-flow-convert-subFlow" doc:id="530cf25a-d8c8-412f-8483-fd0f7515f0d7" name="global-tibco-flow-convert-subFlow"/>
		<flow-ref doc:name="async-logging-end-subflow" doc:id="dce44b65-8186-4e00-bfa0-4ec794761d17" name="async-logging-end-subflow"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9f347435-713f-4def-bced-ab72f4c51e20" >
				<flow-ref doc:name="error-logging-subflow" doc:id="7dddf3ce-e177-4e1b-9510-d289ffc5d9d7" name="error-logging-subflow"/>
			</on-error-continue>
		</error-handler>
	</flow>
	
	<sub-flow name="global-tibco-element-properties-subflow" doc:id="d262cf15-9e71-456c-ac3d-358bb9da4dde">
		<file:list doc:name="List" doc:id="c72debd9-fb0c-442d-998f-934c04e929c3" config-ref="File_Config" directoryPath="inputFiles/Properties" recursive="true">
			<file:matcher directories="EXCLUDE" />
		</file:list>
		<foreach doc:name="For Each" doc:id="a26b9f70-f0d5-43da-98d3-4a9648edcfee" >
			<choice doc:name="Choice" doc:id="f64c456d-42fe-4c7a-83f2-b5f3e8ce4722" >
				<when expression="payload != null">
					<ee:transform doc:name="set-mimeType" doc:id="29cd7969-3a5b-4ea6-ace7-1ea91a8c620b">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<ee:transform doc:name="Transform Message" doc:id="b66612f2-b331-48e2-96ae-645d4f36795a">
						<ee:variables>
							<ee:set-variable variableName="testProp"><![CDATA[%dw 2.0
output application/xml
---
"mule" @("xmlns:ee": "http://www.mulesoft.org/schema/mule/ee/core", "xmlns:http": "http://www.mulesoft.org/schema/mule/http", 
		"xmlns": "http://www.mulesoft.org/schema/mule/core", "xmlns:doc": "http://www.mulesoft.org/schema/mule/documentation",
		"xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
		"xsi:schemaLocation": "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd " ++ 
		"http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd " ++
		"http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"): {
	(vars.testProp.mule),
	((payload.repository.globalVariables.*globalVariable default []) map(record,count) -> {
		"global-property" @(
			"doc:name": "Global Property", 
			"doc:id": uuid(), 
			"name": ((((attributes.path replace p('app.home') with "") replace "defaultVars.substvar" with "") replace "\inputFiles\Properties" with "CustomerApplication") replace "\\" with "/") ++ record.name, 
			"value": (record.value default "")
		): ""
	})
} ]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</when>
			</choice>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="203bbb97-b57d-4025-bc0b-ff5b2a9538da" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
vars.testProp]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	
	<sub-flow name="global-tibco-element-convert-subflow" doc:id="c3f1f2e0-d691-471d-b5f1-b3c441b6aca3" >
		<file:list doc:name="List" doc:id="d1e6ff47-cc64-4c81-b776-2b81279fb88b" directoryPath="${mule.home}/apps/${app.name}/inputFiles/Config"/>
		<foreach doc:name="For Each" doc:id="9e5afa76-835f-4a7b-9289-9ffdd78a95e3" >
			<ee:transform doc:name="Setting mimeType" doc:id="10ca9b41-ce9f-4b24-b3de-d90c73e6323c" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="dac31860-9143-4b82-bb2a-bb0103afd62f">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun getIndex(obj,value) = (obj.*row map if($.PropertyName == value) $$ else "") filter ($ != "")
---
(using (temp=payload.httpSharedResource.config) 
	if (payload.httpSharedResource != null) ({
		"type": "httpListener",
		"name": (attributes.fileName default "Test"),
		"host":	if(temp.Host contains "%%") (("\$/{" ++ (temp.Host replace "%%" with "") ++ "}")) 
				else (temp.Host default "localhost"),
		"port": if(temp.Port contains "%%") (("\$/{" ++ (temp.Port replace "%%" with "") ++ "}")) 
				else (temp.Port default "8081")
	})
	else if (payload.BWSharedResource.resourceType == "ae.shared.JDBCSharedResource") ({
		"type": "dbConfig",
		"driver": payload.BWSharedResource.config.driver default "",
		"maxConnections": payload.BWSharedResource.config.maxConnections default "",
		"connectionType": payload.BWSharedResource.config.connectionType default "",
		"useSharedJndiConfig": payload.BWSharedResource.config.UseSharedJndiConfig default"",
		"location": payload.BWSharedResource.config.location default "",
		"user": payload.BWSharedResource.config.user default "",
		"password": payload.BWSharedResource.config.password default ""
	})
	else if (payload.BWSharedResource.resourceType == "ae.shared.JMSConnectionKey") ({
		"type": "jmsConfig",
		"ProviderURL": payload.BWSharedResource.config.NamingEnvironment.ProviderURL default "",
		"NamingURL": payload.BWSharedResource.config.NamingEnvironment.NamingURL default "",
		"NamingInitialContextFactory": payload.BWSharedResource.config.NamingEnvironment.NamingInitialContextFactory default "",
		"TopicFactoryName": payload.BWSharedResource.config.NamingEnvironment.TopicFactoryName default"",
		"QueueFactoryName": payload.BWSharedResource.config.NamingEnvironment.QueueFactoryName default "",
		"username": if(payload.BWSharedResource.config.ConnectionAttributes.username contains "%%") (("\$/{" ++ (payload.BWSharedResource.config.ConnectionAttributes.username replace "%%" with "") ++ "}")) 
					else (payload.BWSharedResource.config.ConnectionAttributes.username default ""),
		"password": if(payload.BWSharedResource.config.ConnectionAttributes.password contains "%%") (("\$/{" ++ (payload.BWSharedResource.config.ConnectionAttributes.password replace "%%" with "") ++ "}")) 
					else (payload.BWSharedResource.config.ConnectionAttributes.password default "")
	})	
	else ({})
)]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<ee:transform doc:name="Transform Message" doc:id="a35fa8cf-68cf-4046-9454-781a8137ee11" >
				<ee:variables >
					<ee:set-variable variableName="configObject" ><![CDATA[%dw 2.0
output application/json
---
flatten([
	vars.configObject default {},
	payload
])]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="1810198a-6d05-4198-823f-5654f345920b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.configObject filter ($ != {})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="986f47d6-ee54-463c-aa04-d21d00531deb" >
			<ee:variables >
				<ee:set-variable variableName="configs" ><![CDATA[%dw 2.0
output application/xml
---
"mule" @("xmlns:ee": "http://www.mulesoft.org/schema/mule/ee/core", "xmlns:http": "http://www.mulesoft.org/schema/mule/http", 
		"xmlns": "http://www.mulesoft.org/schema/mule/core", "xmlns:doc": "http://www.mulesoft.org/schema/mule/documentation",
		"xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance",
		"xsi:schemaLocation": "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd " ++ 
		"http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd " ++
		"http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"): {
	(payload map(record,count) -> {
		(if(record.'type' == "httpListener") (
			"http:listener-config" @("name":record.name, "doc:name": "HTTP Listener Config", "doc:id": uuid()): {
				"http:listener-connection" @("host": record.host, "port": record.port): ""	
			}
		)
		else ({}))
	})
} ]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="8831ecf2-0864-4a38-9b72-18657b94253e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
mule @('xmlns': "http://www.mulesoft.org/schema/mule/core",
	'xmlns:doc': "http://www.mulesoft.org/schema/mule/documentation",
	'xmlns:xsi' :"http://www.w3.org/2001/XMLSchema-instance",
	'xmlns:jms':"http://www.mulesoft.org/schema/mule/jms",
	'xmlns:file':"http://www.mulesoft.org/schema/mule/file",
	'xmlns:http':"http://www.mulesoft.org/schema/mule/http",
	'xmlns:db':"http://www.mulesoft.org/schema/mule/db",
	'xsi:schemaLocation' : "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
	http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
	http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
	http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd"):
    {
	(vars.properties.mule),
    (vars.configs.mule),    
    }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<file:write doc:name="Write" doc:id="663fbffd-1d67-4100-b4d9-35fadb7b5a4c" config-ref="File_Config" path="outputFiles/global-configuration.xml"/>
	</sub-flow>
	
	<sub-flow name="global-tibco-flow-convert-subFlow" doc:id="8ca15972-3e98-4be9-a2a8-bcd36d943bc2" doc:description="This flow will convert tibco process files to mule flows">
		<!-- <file:read doc:name="Read" doc:id="48704050-c31a-4159-aed6-5eebfef6c06e" config-ref="File_Config" path="inputFiles/Flow/Process.bwp"/> -->
		<file:list doc:name="List" doc:id="33b009ab-ba37-40ec-934c-f999926992b5"  directoryPath="${mule.home}/apps/${app.name}/inputFiles/Flow">
			<file:matcher filenamePattern="*.process" />
		</file:list>
		<foreach doc:name="For Each" doc:id="1842f8af-2e58-49f1-ae0c-1eedefd4df3d" >
			<ee:transform doc:name="set-mimeType" doc:id="b77c2e68-453c-4d31-bd04-e3be4777b327" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
read(payload,'application/xml')]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<ee:transform doc:name="set-FileName" doc:id="610e911a-a7f0-48da-bf2b-b4b1282d79b3" >
				<ee:variables >
					<ee:set-variable variableName="fileName" ><![CDATA[%dw 2.0
output application/java
---
attributes.'fileName' default "" ++ ".xml"]]></ee:set-variable>
					<ee:set-variable variableName="processConvertibleComponents" ><![CDATA[%dw 2.0
output application/java
var compList="ae.activities.log,ae.activities.JDBCUpdateActivity,ae.activities.JMSQueueSendActivity,ae.process.subprocess,ae.activities.JMSQueueEventSource,ae.activities.FileEventSourceResource,httppalette.httpEventSource"
---
payload.ProcessDefinition.*activity map (
	if(compList splitBy (",") contains $.resourceType) ($.resourceType )
	else ""
)]]></ee:set-variable>
					<ee:set-variable variableName="processCompList" ><![CDATA[%dw 2.0
output application/java
---
payload.ProcessDefinition.*activity map (
	($.resourceType )
)]]></ee:set-variable>
					<ee:set-variable variableName="sourceCompList" ><![CDATA[%dw 2.0
output application/java
---
[payload.ProcessDefinition.starter.resourceType]]]></ee:set-variable>
					<ee:set-variable variableName="sourceConvertibleComponents" ><![CDATA[%dw 2.0
output application/java
var sourceCompList="ae.activities.JMSQueueEventSource,ae.activities.FileEventSourceResource,httppalette.httpEventSource"
---

if(sourceCompList splitBy (",") contains payload.ProcessDefinition.starter.resourceType) [payload.ProcessDefinition.starter.resourceType]
else []

]]></ee:set-variable>
				
</ee:variables>
			</ee:transform>
			<ee:transform doc:name="source/process-components" doc:id="dbf425e1-573b-49b4-af37-e197cf98d90d">
				<ee:variables>
					<ee:set-variable variableName="sourceComponent"><![CDATA[%dw 2.0
output application/java
---

[
	if (payload.ProcessDefinition.starter.resourceType == "ae.activities.JMSQueueEventSource") (
	(payload.ProcessDefinition.starter.@'name'): {
		"doc:name" : payload.ProcessDefinition.starter.@name,
		"config-ref" : ((payload.ProcessDefinition.starter.config.ConnectionReference) splitBy("/"))[-1],
		"destination" : vars[((payload.ProcessDefinition.starter.config.SessionAttributes.destination) splitBy("/"))[-1]],
		"persistentDelivery" : if(payload.ProcessDefinition.starter.config.ConfigurableHeaders.JMSDeliveryMode == "PERSISTENT") true  else false,
		"timeToLive" : payload.ProcessDefinition.starter.config.ConfigurableHeaders.JMSExpiration,
		"timeToLiveUnit" : "SECONDS",
		"priority" : payload.ProcessDefinition.starter.config.ConfigurableHeaders.JMSPriority
	}) 
	
	else if (payload.ProcessDefinition.starter.resourceType == "ae.activities.FileEventSourceResource") (
	(payload.ProcessDefinition.starter.@'name'): {
		"doc:name" : payload.ProcessDefinition.starter.@name,
		directory : payload.ProcessDefinition.starter.config.fileName
	})
	else if (payload.ProcessDefinition.starter.resourceType == "httppalette.httpEventSource") (
	(payload.ProcessDefinition.starter.@'name'): {
		"doc:name" : payload.ProcessDefinition.starter.@name,
		"config-ref" : ((payload.ProcessDefinition.starter.config.sharedChannel) splitBy("/"))[-1],
		"path": "/"
	})
	
	else ""
]
]]></ee:set-variable>
					<ee:set-variable variableName="processComponents"><![CDATA[%dw 2.0
output application/java
---
payload.ProcessDefinition.*activity map (
	if($.resourceType == "ae.activities.log") (
		($.@name): {
			"doc:name" : $.@name,
			"message" : $.inputBindings.message
		}
	)
	else if($.resourceType == "ae.activities.JDBCUpdateActivity") (
		($.@name): {
			"doc:name" : $.@name,
			"config-ref" : ($.config.jdbcSharedConfig splitBy("/"))[-1],
			"sql" : $.config.statement replace "Values%" with "",
			"input-parameters" : $.inputBindings.'jdbcUpdateActivityInput'.*parameter map $.parameterName
		}
	)
	else if($.resourceType == "ae.activities.JMSQueueSendActivity") (
		($.@name): {
			"doc:name" : $.@name,
			"config-ref" : ($.config.ConnectionReference splitBy("/"))[-1],
			"destination" : vars[$.config.SessionAttributes.destination] default "",
			"persistentDelivery" : if($.config.ConfigurableHeaders.JMSDeliveryMode == "PERSISTENT") true else false,
			"timeToLive" : $.config.ConfigurableHeaders.JMSExpiration,
			"timeToLiveUnit" : "SECONDS",
			"priority" : $.config.ConfigurableHeaders.JMSPriority		
			}
	)
	else if($.resourceType == "ae.activities.catch") (
		($.@name): {
			"doc:name" : $.@name		
			}
	)
	else if($.resourceType == "ae.activities.JSONParserActivity") (
		($.@name): {
			"doc:name" : $.@name,
			"message": p('connectorNotFoundMessage')		
			}
	)
	else if($.resourceType == "ae.activities.JSONRenderActivity") (
		($.@name): {
			"doc:name" : $.@name,
			"message": p('connectorNotFoundMessage')		
			}
	)
	else if($.resourceType == "httppalette.httpWebResponse") (
		($.@name): {
			"doc:name" : $.@name,
			"message": p('connectorNotFoundMessage')	

			}
	)
	else if($.resourceType == "ae.process.subprocess") (
		($.@name): {
			"doc:name" : $.@name,
			"name" : ($.config.processName splitBy("/"))[-1]
			}
	)
	else ""
)]]></ee:set-variable>
					<ee:set-variable variableName="AllComponents" ><![CDATA[%dw 2.0
output application/java
---
(vars.AllComponents default [] ++ vars.processCompList default [] ++ vars.sourceCompList default [])]]></ee:set-variable>
					<ee:set-variable variableName="AllConvertibleComps" ><![CDATA[%dw 2.0
output application/java
---
(vars.AllConvertibleComps default [] ++ vars.processConvertibleComponents[?($ != "")] default [] ++ vars.sourceConvertibleComponents default [])]]></ee:set-variable>
				
</ee:variables>
			</ee:transform>
			<ee:transform doc:name="transform as mule-xml" doc:id="b1e3813a-f17a-403a-aa36-c014d156c308">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
mule @('xmlns': "http://www.mulesoft.org/schema/mule/core",
	'xmlns:doc': "http://www.mulesoft.org/schema/mule/documentation",
	'xmlns:xsi' :"http://www.w3.org/2001/XMLSchema-instance",
	'xmlns:jms':"http://www.mulesoft.org/schema/mule/jms",
	'xmlns:file':"http://www.mulesoft.org/schema/mule/file",
	'xmlns:http':"http://www.mulesoft.org/schema/mule/http",
	'xmlns:db':"http://www.mulesoft.org/schema/mule/db",
	'xsi:schemaLocation' : "http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd " ++
	"http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd " ++
	"http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd " ++
    "http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd"):{	    
    (flow @(name: vars.fileName, 'doc:id': "c2f9df18-fe5d-415b-9142-f9274d00127d"): {
    	(if(payload.ProcessDefinition.starter.resourceType == "ae.activities.JMSQueueEventSource")(
						'jms:listener' @('doc:name': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'doc:name',
						'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190",
				        'config-ref': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'config-ref',
				        'destination': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'destination',
				        'persistentDelivery': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'persistentDelivery',
				        'timeToLive': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'timeToLive',
				        'timeToLiveUnit': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'timeToLiveUnit',
				        'priority': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'priority'
				):{}
			)
			else if(payload.ProcessDefinition.starter.resourceType == "ae.activities.FileEventSourceResource")(
						'file:listener' @('doc:name': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'doc:name',
						'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190",
				        'config-ref': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'config-ref'
						):{}
					
						)
			else if(payload.ProcessDefinition.starter.resourceType == "httppalette.httpEventSource")(
						'http:listener' @('doc:name': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'doc:name',
						'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190",
						'path': "/",
				        'config-ref': vars.sourceComponent[payload.ProcessDefinition.starter.@name][0].'config-ref'
				  ):{}
				  )
			
		  else {}),
		(payload.ProcessDefinition.*activity map (
			if($.resourceType == "ae.activities.log")(
				'logger' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'level': "INFO",'message': upper(vars.processComponents[$.@name][0].'message')):{}
			)
			else if($.resourceType == "ae.activities.JDBCUpdateActivity")(
				'db:insert' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref': vars.processComponents[$.@name][0].'config-ref'):{
					'db:sql': vars.processComponents[$.@name][0].'sql'
				}
			)
			else if($.resourceType == "ae.activities.JMSQueueSendActivity")(
				'jms:publish' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref': vars.processComponents[$.@name][0].'config-ref'):{}
			)
		else if($.resourceType == "ae.activities.JSONParserActivity")(
				'logger' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'level': "INFO",'message': upper(vars.processComponents[$.@name][0].'message')):{}
			)
			
			else if($.resourceType == "ae.activities.JSONRenderActivity")(
				'logger' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190", 'level': "INFO",'message': upper(vars.processComponents[$.@name][0].'message')):{}
			)
			else if($.resourceType == "httppalette.httpWebResponse")(
				'logger' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'level': "INFO",'message': upper(vars.processComponents[$.@name][0].'message')):{}
			)
			else if($.resourceType == "ae.process.subprocess")(
				'flow-ref' @('doc:name': vars.processComponents[$.@name][0].'doc:name' ,'doc:id': "996d170f-3775-4c56-9fa7-14fd34c8a190" ,'config-ref': vars.processComponents[$.@name][0].'config-ref'):{}
			)
			else {}
		) reduce ($$ ++ $)
	)})
}


]]></ee:set-payload>
				</ee:message>
				<ee:variables >
				</ee:variables>
			
</ee:transform>
			<file:write doc:name="Write-output files" doc:id="2217274f-83bd-456b-a331-3833d6efa525" path="#['outputFiles/' ++ vars.fileName]" config-ref="File_Config"/>
		</foreach>
		<ee:transform doc:name="analyser-mapping" doc:id="fea23f30-d5f9-4d60-9c31-4a9289a817b4" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="analyserPayload" ><![CDATA[%dw 2.0
output application/csv
var allConvertibleComponents= (vars.AllConvertibleComps) distinctBy $
var notRequiredComponents= ((vars.AllComponents) -- (vars.AllConvertibleComps)) distinctBy $
var sizeOfConvertibleComps= sizeOf((vars.AllConvertibleComps default []))
var sizeOfCompsNotRequired= sizeOf(vars.AllComponents[?($ != null)] -- vars.AllConvertibleComps)
---
vars.AllComponents map {
	'NUM OF CONVERTIBLE COMPONENTS': if($$ == 0)(sizeOfConvertibleComps) else "",
	'NUM OF COMPONENTS NOT REQUIRED': if($$ == 0)(sizeOfCompsNotRequired) else "",
	'CONVERTIBLE COMPONENTS': allConvertibleComponents[$$],
	'COMPONENTS NOT REQUIRED': notRequiredComponents[$$]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<file:write doc:name="Write-analyser-file" doc:id="fb598845-9b05-454e-ae8d-a9db924ce3ef" config-ref="File_Config" path="outputFiles/analyser.csv">
			<file:content ><![CDATA[#[vars.analyserPayload]]]></file:content>
		</file:write>
		<logger level="INFO" doc:name="Logger" doc:id="f55cf8ed-fc10-4c24-b74b-3c6a4311f9b1" message="#['Transformation process completed']"/>
		<set-variable value="${mule.home}/apps/${app.name}/outputFiles/" doc:name="log-outPutFileDirectory" doc:id="9b6ee04f-e7bd-4972-a762-333b23045d9a" variableName="outPutFileDirectory"/>
		<set-payload value="#[vars.outPutFileDirectory]" doc:name="output file directory" doc:id="7d69d560-7863-48b6-a8f9-b4db006c39fb" />
		<logger level="INFO" doc:name="Logger" doc:id="da183cdc-6c1e-4c54-926d-1cb37300e61a" message="Please check output file #[vars.outPutFileDirectory]" />	
	
</sub-flow>
	
</mule>
